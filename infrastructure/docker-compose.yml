version: '3.8'

services:
  # HashiCorp Vault Server
  vault:
    image: hashicorp/vault:1.15.2
    container_name: vault-pki
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://127.0.0.1:8200"
    volumes:
      - ./vault/config:/vault/config
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    command: >
      sh -c "
        vault server -dev -dev-root-token-id=root -dev-listen-address=0.0.0.0:8200 &
        sleep 10 &&
        export VAULT_ADDR=http://127.0.0.1:8200 &&
        export VAULT_TOKEN=root &&
        vault auth enable userpass &&
        vault secrets enable -path=pki pki &&
        vault secrets tune -max-lease-ttl=87600h pki &&
        vault write pki/root/generate/internal common_name=internal-ca ttl=87600h &&
        vault write pki/config/urls issuing_certificates=http://vault:8200/v1/pki/ca distribution_points=http://vault:8200/v1/pki/crl &&
        vault secrets enable -path=pki_int pki &&
        vault secrets tune -max-lease-ttl=43800h pki_int &&
        vault write -field=csr pki_int/intermediate/generate/internal common_name='Internal Intermediate CA' > /tmp/pki_intermediate.csr &&
        vault write -field=certificate pki/root/sign-intermediate csr=@/tmp/pki_intermediate.csr format=pem_bundle ttl=43800h > /tmp/intermediate.cert.pem &&
        vault write pki_int/intermediate/set-signed certificate=@/tmp/intermediate.cert.pem &&
        vault write pki_int/roles/internal-role allowed_domains=internal.local,localhost allow_subdomains=true max_ttl=8760h &&
        echo 'cGF0aCAicGtpKiIgewogIGNhcGFiaWxpdGllcyA9IFsiY3JlYXRlIiwgInJlYWQiLCAidXBkYXRlIiwgImRlbGV0ZSIsICJsaXN0Il0KfQpwYXRoICJwa2lfaW50KiIgewogIGNhcGFiaWxpdGllcyA9IFsiY3JlYXRlIiwgInJlYWQiLCAidXBkYXRlIiwgImRlbGV0ZSIsICJsaXN0Il0KfQo=' | base64 -d | vault policy write pki-policy -
        &&
        vault write auth/userpass/users/pki-user password=pki-password policies=pki-policy &&
        tail -f /dev/null
      "
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pki-network

  # PostgreSQL for MCP server data
  postgres:
    image: postgres:15
    container_name: postgres-mcp
    environment:
      POSTGRES_DB: mcp_pki
      POSTGRES_USER: mcp_user
      POSTGRES_PASSWORD: mcp_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - pki-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: redis-mcp
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pki-network

  # MCP PKI Server
  mcp-pki-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    container_name: mcp-pki-server
    depends_on:
      - vault
      - postgres
      - redis
    environment:
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: "root"
      POSTGRES_URL: "postgresql://mcp_user:mcp_password@postgres:5432/mcp_pki"
      REDIS_URL: "redis://redis:6379"
      GLOBALSIGN_API_KEY: "${GLOBALSIGN_API_KEY:-demo_key}"
      GLOBALSIGN_API_SECRET: "${GLOBALSIGN_API_SECRET:-demo_secret}"
      DIGICERT_API_KEY: "${DIGICERT_API_KEY:-demo_key}"
      ENTRUST_API_KEY: "${ENTRUST_API_KEY:-demo_key}"
      ENTRUST_API_SECRET: "${ENTRUST_API_SECRET:-demo_secret}"
      MCP_SERVER_PORT: "8080"
    ports:
      - "8080:8080"
    volumes:
      - ./mcp-server/config:/app/config
      - ./mcp-server/logs:/app/logs
    networks:
      - pki-network

volumes:
  postgres_data:
  redis_data:

networks:
  pki-network:
    driver: bridge
